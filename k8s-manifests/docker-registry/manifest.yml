# PersistentVolume for all apps on the cluster.
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-ssd-apps
spec:
  storageClassName: ssd-apps
  capacity:
    storage: 32Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: "{{ kubernetes_master_ip }}"
    path: "{{ nfs_share_dir }}/ssd/apps"
    readOnly: false
  persistentVolumeReclaimPolicy: Retain

# PersistentVolumeClaim for Docker registry.
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: registry-pvc
  namespace: {{ manifest_namespace }}
  labels:
    app: docker-registry
  annotations:
    volume.beta.kubernetes.io/storage-class: "ssd-apps"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi

# Docker registry Deployment definition.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: {{ manifest_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
        - name: docker-registry
          imagePullPolicy: IfNotPresent
          image: {{ docker_registry_image }}
          env:
            - name: REGISTRY_HTTP_SECRET
              value: {{ docker_registry_http_secret }}
            - name: REGISTRY_HTTP_ADDR
              value: ":5000"
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          ports:
          - name: http
            containerPort: 5000
          volumeMounts:
          - name: docker-registry-data
            mountPath: /var/lib/registry
            subPath: registry
      volumes:
        - name: docker-registry-data
          persistentVolumeClaim:
            claimName: registry-pvc

# Docker registry Service definition.
---
kind: Service
apiVersion: v1
metadata:
  name: docker-registry
  namespace: {{ manifest_namespace }}
  labels:
    app: docker-registry
spec:
  selector:
    app: docker-registry
  ports:
  - name: http
    port: 5000
    targetPort: 5000

# TLS Secret for Docker registry Ingress.
---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: "{{ manifest_namespace }}-tls-cert"
  namespace: "{{ manifest_namespace }}"
data:
  tls.key: "{{ docker_registry_key | b64encode }}"
  tls.crt: "{{ docker_registry_crt | b64encode }}"

# Docker registry Ingress definition.
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  name: docker-registry
  namespace: "{{ manifest_namespace }}"
spec:
  rules:
  - host: "{{ docker_registry_domain }}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          serviceName: docker-registry
          servicePort: http
  tls:
    - secretName: "{{ manifest_namespace }}-tls-cert"
