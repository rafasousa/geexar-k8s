# PersistentVolumeClaim for all apps.
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ssd-apps
  namespace: {{ manifest_namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: storage-ssd-apps
  resources:
    requests:
      storage: 1Mi

# PersistentVolumeClaim for all medias.
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ssd-media
  namespace: {{ manifest_namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: storage-ssd-media
  resources:
    requests:
      storage: 1Mi

# Docker registry Secret definition.
---
kind: Secret
apiVersion: v1
metadata:
  name: docker-registry
  namespace: kube-system
data:
  .dockerconfigjson: >-
    eyJhdXRocyI6eyJodHRwczovL3JlZ2lzdHJ5LnRvYXJyYXkuY29tIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJwYXNzd29yZCI6ImFkbWluIiwiYXV0aCI6IllXUnRhVzQ2WVdSdGFXND0ifX19
type: kubernetes.io/dockerconfigjson

# Docker registry Deployment definition.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: {{ manifest_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      nodeName: {{ docker_registry_ingress_host }}
      containers:
        - name: docker-registry
          imagePullPolicy: IfNotPresent
          image: {{ docker_registry_image }}
          env:
            - name: REGISTRY_HTTP_SECRET
              value: {{ docker_registry_http_secret }}
            - name: REGISTRY_HTTP_ADDR
              value: ":5000"
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          ports:
          - name: http
            containerPort: 5000
          volumeMounts:
          - name: docker-registry-data
            mountPath: /var/lib/registry
            subPath: registry
      volumes:
        - name: docker-registry-data
          persistentVolumeClaim:
            claimName: ssd-apps

# Docker registry Service definition.
---
kind: Service
apiVersion: v1
metadata:
  name: docker-registry
  namespace: {{ manifest_namespace }}
  labels:
    app: docker-registry
spec:
  selector:
    app: docker-registry
  ports:
  - name: http
    port: 5000
    targetPort: 5000

# Docker registry Ingress definition.
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: docker-registry
  namespace: "{{ manifest_namespace }}"
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - match: Host(`{{ docker_registry_domain }}`) && PathPrefix(`/`)
    kind: Rule
    services:
    - name: docker-registry
      port: 5000
  tls: {}
