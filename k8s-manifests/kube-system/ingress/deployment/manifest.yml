# https://community.traefik.io/t/can-i-set-namespace-for-tls-secretname-in-ingressroute/2619
# https://www.jeffgeerling.com/blog/2019/mounting-kubernetes-secret-single-file-inside-pod

apiVersion: v1
kind: Namespace
metadata:
  name: traefik

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: traefik

---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: traefik-certs
  namespace: "traefik"
data:
  tls.crt: "{{ lookup('file', playbook_dir  + '/k8s-manifests/kube-system/certs/tls.crt') | b64encode }}"
  tls.key: "{{ lookup('file', playbook_dir  + '/k8s-manifests/kube-system/certs/tls.key') | b64encode }}"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-dynamic
  namespace: traefik
data:
  dynamic.toml: |
    # Dynamic configuration
    [[tls.certificates]]
      certFile = "/certs/tls.crt"
      keyFile = "/certs/tls.key"
      stores = ["default"]

    # [[tls.certificates]]
    #   # Note that since no store is defined,
    #   # the certificate below will be stored in the `default` store.
    #   certFile = "/certs/other-domain.cert"
    #   keyFile = "/certs/other-domain.key"
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  namespace: traefik
  name: traefik-ingress-lb
  labels:
    app: traefik-ingress-lb
spec:
  selector:
    matchLabels:
      app: traefik-ingress-lb
  template:
    metadata:
      labels:
        app: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik-ingress-lb
          image: "{{ traefik_image }}"
          args:
            - --api.insecure
            - --serversTransport.insecureSkipVerify=true
            - --accesslog
            - --providers.kubernetescrd
            - --providers.kubernetesingress=true
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - "--providers.file.filename=/config/dynamic.toml"
            - --api.dashboard=true
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
          volumeMounts:
            - name: certs
              mountPath: "/certs"
              readOnly: true
            - name: dynamic
              mountPath: "/config"
              readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: traefik-certs
      - name: dynamic
        configMap:
          name: traefik-dynamic

---
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress
  namespace: traefik
spec:
  selector:
    app: traefik-ingress-lb
  type: LoadBalancer
  ports:
    - protocol: TCP
      name: web
      port: 80
      targetPort: 80
    - protocol: TCP
      name: admin
      port: 8080
      targetPort: 8080
    - protocol: TCP
      name: websecure
      port: 443
      targetPort: 443
  externalIPs:
    - "{{ traefik_load_balancer_ip }}"
