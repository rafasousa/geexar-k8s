apiVersion: v1
kind: Namespace
metadata:
  name: traefik

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: traefik

---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  namespace: traefik
  name: traefik-ingress-lb
  labels:
    app: traefik-ingress-lb
spec:
  selector:
    matchLabels:
      app: traefik-ingress-lb
  template:
    metadata:
      labels:
        app: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik-ingress-lb
          image: "{{ traefik_image }}"
          args:
            - --api.insecure
            - --accesslog
            - --providers.kubernetescrd
            - --providers.kubernetesingress=true
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --api.dashboard=true
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress
  namespace: traefik
spec:
  selector:
    app: traefik-ingress-lb
  type: LoadBalancer
  ports:
    - protocol: TCP
      name: web
      port: 80
      targetPort: 80
    - protocol: TCP
      name: admin
      port: 8080
      targetPort: 8080
    - protocol: TCP
      name: websecure
      port: 443
      targetPort: 443
  externalIPs:
    - "{{ traefik_load_balancer_ip }}"
# ---
# kind: DaemonSet
# apiVersion: apps/v1
# metadata:
#   name: traefik-ingress-controller
#   namespace: traefik
#   labels:
#     k8s-app: traefik-ingress-lb
# spec:
#   selector:
#     matchLabels:
#       k8s-app: traefik-ingress-lb
#       name: traefik-ingress-lb
#   template:
#     metadata:
#       labels:
#         k8s-app: traefik-ingress-lb
#         name: traefik-ingress-lb
#     spec:
#       serviceAccountName: traefik-ingress-controller
#       terminationGracePeriodSeconds: 60
#       hostNetwork: true
#       # hostNetwork: true
#       # Enable this only if using static wildcard cert
#       # stored in a k8s Secret instead of LetsEncrypt
#       #- name: ssl
#       #  secret:
#       #    secretName: traefik-cert
#       containers:
#         - image: "{{ traefik_image }}"
#           name: traefik-ingress-lb
#           imagePullPolicy: IfNotPresent
#           ports:
#             - name: http
#               containerPort: 80
#             - name: https
#               containerPort: 443
#             - name: admin
#               containerPort: 8080
#           securityContext:
#             capabilities:
#               drop:
#               - ALL
#               add:
#               - NET_BIND_SERVICE
#           args:
#             - --api
#             - --providers.kubernetescrd
#             - --providers.kubernetesingress=true
#             - --log.level=INFO
#             # - --defaultentrypoints=http,https
#             - --entrypoints.web.Address=:80
#             - --entrypoints.websecure.Address=:443
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: traefik-ingress-service
#   namespace: traefik
# spec:
#   selector:
#     k8s-app: traefik-ingress-lb
#   ports:
#     - protocol: TCP
#       port: 80
#       name: http
#     - protocol: TCP
#       port: 443
#       name: https
#   type: LoadBalancer
